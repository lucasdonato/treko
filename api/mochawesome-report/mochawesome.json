{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-12T19:57:23.508Z",
    "end": "2019-09-12T19:57:30.368Z",
    "duration": 6860,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "20c9bfcd-8896-42e7-889c-189ba03b9a40",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6157226c-4410-4219-82a7-cc0ba848a32e",
          "title": "delete",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
          "file": "\\test\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d549c1b5-1f73-4dc1-9b21-2946c643493b",
              "title": "quando apago uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "delete quando apago uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "364bcb44-7ae4-4e0c-a513-c5f9812120fb",
                  "parentUUID": "d549c1b5-1f73-4dc1-9b21-2946c643493b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "delete quando apago uma tarefa \"after all\" hook",
                  "timedOut": false,
                  "duration": 13,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    done();\n});",
                  "err": {},
                  "uuid": "8d593e03-86e8-4d25-848b-c2afcf745894",
                  "parentUUID": "d549c1b5-1f73-4dc1-9b21-2946c643493b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando apago uma tarefa deve retornar 200",
                  "timedOut": false,
                  "duration": 68,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "89afd32c-a4c6-4fdb-8c45-cf1928e8f03c",
                  "parentUUID": "d549c1b5-1f73-4dc1-9b21-2946c643493b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89afd32c-a4c6-4fdb-8c45-cf1928e8f03c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 68,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "d7d42d34-6194-4ded-94f4-8c4686817355",
              "title": "quando a tarefa nao existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando a tarefa nao existe deve retornar 200",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.delete('/task/' + id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "6e16bb63-e6c8-4e15-ad3b-5986f6d89db9",
                  "parentUUID": "d7d42d34-6194-4ded-94f4-8c4686817355",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e16bb63-e6c8-4e15-ad3b-5986f6d89db9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "97580f02-277a-46a9-8b11-a325491c6ee8",
          "title": "get",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
          "file": "\\test\\get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bb1c0e32-4ea6-4814-ad3c-ecd3006d8844",
              "title": "quando eu tenho tarefas cadastradas",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "get quando eu tenho tarefas cadastradas \"before all\" hook",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rabbit.delete(\"/api/queues/%2F/tasksdev/contents\").auth('guest', 'guest').end(function (err, res) {\n                expect(res).to.has.status(204);\n            });\n            var tasks = [{ title: 'Estudar NodejS', owner: 'eu@papito.io', done: false }, { title: 'Fazer compras', owner: 'eu@papito.io', done: false }, { title: 'Estudar MongoDB', owner: 'eu@papito.io', done: true }];\n            _task2.default.insertMany(tasks);\n            done();",
                  "err": {},
                  "uuid": "eee0246c-2aaf-4c58-950a-7c0422f65c90",
                  "parentUUID": "bb1c0e32-4ea6-4814-ad3c-ecd3006d8844",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma lista",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve retornar uma lista",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data).to.be.an('array');\n    done();\n});",
                  "err": {},
                  "uuid": "435673e4-6605-408f-9988-8bb3e4180bfa",
                  "parentUUID": "bb1c0e32-4ea6-4814-ad3c-ecd3006d8844",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve filtrar por palavra chave",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve filtrar por palavra chave",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').query({ title: 'Estudar' }).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data[0].title).to.equal('Estudar NodejS');\n    expect(res.body.data[1].title).to.equal('Estudar MongoDB');\n    done();\n});",
                  "err": {},
                  "uuid": "2eaed80e-f3fc-49be-a519-cb71ec1d08c4",
                  "parentUUID": "bb1c0e32-4ea6-4814-ad3c-ecd3006d8844",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "435673e4-6605-408f-9988-8bb3e4180bfa",
                "2eaed80e-f3fc-49be-a519-cb71ec1d08c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "fa13d1e3-29a4-44f6-b56b-9ba6d2ad325d",
              "title": "quando busco por id",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma única tarefa",
                  "fullTitle": "get quando busco por id deve retornar uma única tarefa",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Ler um livro de Javascript', owner: 'eu@papito.io', done: false }];\n_task2.default.insertMany(tasks, function (err, result) {\n    var id = result[0]._id;\n    request.get('/task/' + id).end(function (err, res) {\n        expect(res).to.has.status(200);\n        expect(res.body.data.title).to.equal(tasks[0].title);\n        done();\n    });\n});",
                  "err": {},
                  "uuid": "4aee837c-e0e1-4dc9-8ce3-822eecad5f27",
                  "parentUUID": "fa13d1e3-29a4-44f6-b56b-9ba6d2ad325d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4aee837c-e0e1-4dc9-8ce3-822eecad5f27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "2f12ad49-9156-4527-9939-a7b990080485",
              "title": "quando a tarefa nao existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 404",
                  "fullTitle": "get quando a tarefa nao existe deve retornar 404",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.get('/task/' + id).end(function (err, res) {\n    expect(res).to.has.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "b3d4252a-9afb-4487-90ae-05f36578873b",
                  "parentUUID": "2f12ad49-9156-4527-9939-a7b990080485",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3d4252a-9afb-4487-90ae-05f36578873b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "15f60847-2e09-4ee6-ae36-f40891f92c0b",
          "title": "post",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
          "file": "\\test\\post.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a5dd4b5c-7e81-4dc6-bfb1-520cff653292",
              "title": "quando eu cadastro uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando eu cadastro uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 4232,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rabbit.delete(\"/api/queues/%2F/tasksdev/contents\").auth('guest', 'guest').end(function (err, res) {\n    expect(res).to.has.status(204);\n    done();\n});",
                  "err": {},
                  "uuid": "0d9ab8d1-be32-4569-beac-ccfbb879a0c4",
                  "parentUUID": "a5dd4b5c-7e81-4dc6-bfb1-520cff653292",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "post quando eu cadastro uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 54,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data.title).to.be.an('string');\n    expect(res.body.data.owner).to.be.an('string');\n    expect(res.body.data.done).to.be.an('boolean');\n    done();\n});",
                  "err": {},
                  "uuid": "0b0919ce-1629-4168-b275-8b93f1c639d9",
                  "parentUUID": "a5dd4b5c-7e81-4dc6-bfb1-520cff653292",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve enviar email",
                  "fullTitle": "post quando eu cadastro uma tarefa e deve enviar email",
                  "timedOut": false,
                  "duration": 2265,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var payload = { vhost: \"/\", name: \"tasksdev\", truncate: \"50000\", ackmode: \"ack_requeue_true\", encoding: \"auto\", count: \"1000\" };\nrabbit.post(\"/api/queues/%2f/tasksdev/get\").auth('guest', 'guest').send(payload).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body[0].payload).to.contain('Tarefa ' + task.title + ' criada com sucesso!');\n    done();\n});",
                  "err": {},
                  "uuid": "dca0d12f-0501-4559-a997-f85f99daf8b6",
                  "parentUUID": "a5dd4b5c-7e81-4dc6-bfb1-520cff653292",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b0919ce-1629-4168-b275-8b93f1c639d9",
                "dca0d12f-0501-4559-a997-f85f99daf8b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2319,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "796c2bbb-0c50-48d0-8332-47c2b51c35b1",
              "title": "quando nao informo o titulo",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post quando nao informo o titulo entao deve retornar 400",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.title.message).to.eql('Oops! Title is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "7b626120-6811-4ce8-a4f8-d1d6ebdfbecc",
                  "parentUUID": "796c2bbb-0c50-48d0-8332-47c2b51c35b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b626120-6811-4ce8-a4f8-d1d6ebdfbecc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "c53fabfe-0240-4714-806f-836a20e4e105",
              "title": "quando nao informo o dono",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post quando nao informo o dono entao deve retornar 400",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.owner.message).to.eql('Oops! Owner is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "eaed26f7-e0be-492c-a285-4702d34cd66e",
                  "parentUUID": "c53fabfe-0240-4714-806f-836a20e4e105",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eaed26f7-e0be-492c-a285-4702d34cd66e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "e373b685-fc6c-47ce-b863-b89a577630d3",
              "title": "quando a tarefa jรก existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando a tarefa jรก existe \"before all\" hook",
                  "timedOut": false,
                  "duration": 6,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    done();\n});",
                  "err": {},
                  "uuid": "487513d4-027a-4646-bf22-1e63201c43d6",
                  "parentUUID": "e373b685-fc6c-47ce-b863-b89a577630d3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 409",
                  "fullTitle": "post quando a tarefa jรก existe deve retornar 409",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(409);\n    expect(res.body.errmsg).to.include('duplicate key');\n    done();\n});",
                  "err": {},
                  "uuid": "05f97e7c-23fc-45c9-ab4a-2e51af3053f5",
                  "parentUUID": "e373b685-fc6c-47ce-b863-b89a577630d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05f97e7c-23fc-45c9-ab4a-2e51af3053f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "53892794-0365-418f-9c3e-37bdf0716386",
          "title": "put",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\put.spec.js",
          "file": "\\test\\put.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c2ed0cda-292d-42a5-a1d5-2ebfd2bd20d8",
              "title": "quando eu altero uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\put.spec.js",
              "file": "\\test\\put.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "put quando eu altero uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "c635b87a-2959-47ab-8a0f-2dcc857b1001",
                  "parentUUID": "c2ed0cda-292d-42a5-a1d5-2ebfd2bd20d8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "put quando eu altero uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.title = 'Comprar Baconzitos', task.done = true;\nrequest.put('/task/' + task._id).send(task).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "3de3391a-5a55-480f-a4df-8878008312f5",
                  "parentUUID": "c2ed0cda-292d-42a5-a1d5-2ebfd2bd20d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve retornar os dados atualizados",
                  "fullTitle": "put quando eu altero uma tarefa e deve retornar os dados atualizados",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body.data.title).to.eql(task.title);\n    expect(res.body.data.done).to.be.true;\n    done();\n});",
                  "err": {},
                  "uuid": "6351bd0f-b346-4026-b85b-c152a76051a1",
                  "parentUUID": "c2ed0cda-292d-42a5-a1d5-2ebfd2bd20d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3de3391a-5a55-480f-a4df-8878008312f5",
                "6351bd0f-b346-4026-b85b-c152a76051a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 9000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}