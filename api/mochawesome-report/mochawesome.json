{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-12T15:37:55.412Z",
    "end": "2019-09-12T15:38:00.429Z",
    "duration": 5017,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bc1a0289-ff88-440d-aaab-7da4771d691d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4a2e887-5d6f-447f-918c-34bda48d668e",
          "title": "delete",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
          "file": "\\test\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cbfa2f42-7dac-4350-b7c4-36500c6412dd",
              "title": "quando apago uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "delete quando apago uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "2647c905-459d-4f61-8106-5c0fedd410c1",
                  "parentUUID": "cbfa2f42-7dac-4350-b7c4-36500c6412dd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "delete quando apago uma tarefa \"after all\" hook",
                  "timedOut": false,
                  "duration": 21,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    done();\n});",
                  "err": {},
                  "uuid": "d89cf308-830d-4ae0-af2b-313d0f425ad6",
                  "parentUUID": "cbfa2f42-7dac-4350-b7c4-36500c6412dd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando apago uma tarefa deve retornar 200",
                  "timedOut": false,
                  "duration": 68,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "1e109cf0-ef02-4369-9029-431b7c940adb",
                  "parentUUID": "cbfa2f42-7dac-4350-b7c4-36500c6412dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e109cf0-ef02-4369-9029-431b7c940adb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 68,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "ba92af6d-a92b-4ce2-a5b3-116228480bd2",
              "title": "quando a tarefa nao existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando a tarefa nao existe deve retornar 200",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.delete('/task/' + id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "8592ed05-21da-4ac4-9d2d-03c2f4f03d28",
                  "parentUUID": "ba92af6d-a92b-4ce2-a5b3-116228480bd2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8592ed05-21da-4ac4-9d2d-03c2f4f03d28"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "5bbb39b2-99c0-4f49-801b-4337a6dd0671",
          "title": "get",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
          "file": "\\test\\get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3f74a708-9001-467c-8453-ebe215c2b71b",
              "title": "quando eu tenho tarefas cadastradas",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "get quando eu tenho tarefas cadastradas \"before all\" hook",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Estudar NodejS', owner: 'eu@papito.io', done: false }, { title: 'Fazer compras', owner: 'eu@papito.io', done: false }, { title: 'Estudar MongoDB', owner: 'eu@papito.io', done: true }];\n_task2.default.insertMany(tasks);\ndone();",
                  "err": {},
                  "uuid": "8005f850-1757-4658-89ac-e70f6c331e7e",
                  "parentUUID": "3f74a708-9001-467c-8453-ebe215c2b71b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma lista",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve retornar uma lista",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data).to.be.an('array');\n    done();\n});",
                  "err": {},
                  "uuid": "c2752cde-fdf3-4512-b9f6-9ebffae64308",
                  "parentUUID": "3f74a708-9001-467c-8453-ebe215c2b71b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve filtrar por palavra chave",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve filtrar por palavra chave",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').query({ title: 'Estudar' }).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data[0].title).to.equal('Estudar NodejS');\n    expect(res.body.data[1].title).to.equal('Estudar MongoDB');\n    done();\n});",
                  "err": {},
                  "uuid": "3449a54d-fa6a-45ab-bca5-fdd505318020",
                  "parentUUID": "3f74a708-9001-467c-8453-ebe215c2b71b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2752cde-fdf3-4512-b9f6-9ebffae64308",
                "3449a54d-fa6a-45ab-bca5-fdd505318020"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 45,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "7ca11a8d-2afa-4dd1-a556-e28ccf484f7a",
              "title": "quando busco por id",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma única tarefa",
                  "fullTitle": "get quando busco por id deve retornar uma única tarefa",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Ler um livro de Javascript', owner: 'eu@papito.io', done: false }];\n_task2.default.insertMany(tasks, function (err, result) {\n    var id = result[0]._id;\n    request.get('/task/' + id).end(function (err, res) {\n        expect(res).to.has.status(200);\n        expect(res.body.data.title).to.equal(tasks[0].title);\n        done();\n    });\n});",
                  "err": {},
                  "uuid": "882429b0-ac0a-44ac-98b4-b56b689e0d4d",
                  "parentUUID": "7ca11a8d-2afa-4dd1-a556-e28ccf484f7a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "882429b0-ac0a-44ac-98b4-b56b689e0d4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "8e92f82f-5157-4486-89c0-8ddf080e2785",
              "title": "quando a tarefa nao existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 404",
                  "fullTitle": "get quando a tarefa nao existe deve retornar 404",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.get('/task/' + id).end(function (err, res) {\n    expect(res).to.has.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "9b837e56-546a-4a5b-b1f0-5254b67c5842",
                  "parentUUID": "8e92f82f-5157-4486-89c0-8ddf080e2785",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b837e56-546a-4a5b-b1f0-5254b67c5842"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "105d4b58-0139-4314-8dd3-5c7c42a32b46",
          "title": "post",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
          "file": "\\test\\post.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4e25a0df-312f-4186-bceb-1f7e8f59e692",
              "title": "quando eu cadastro uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando eu cadastro uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 2261,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rabbit.delete(\"/api/queues/%2F/tasksdev/contents\").auth('guest', 'guest').end(function (err, res) {\n    expect(res).to.has.status(204);\n    done();\n});",
                  "err": {},
                  "uuid": "aa565a9b-9016-4f15-b7c2-88bbc999892f",
                  "parentUUID": "4e25a0df-312f-4186-bceb-1f7e8f59e692",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "post quando eu cadastro uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data.title).to.be.an('string');\n    expect(res.body.data.owner).to.be.an('string');\n    expect(res.body.data.done).to.be.an('boolean');\n    done();\n});",
                  "err": {},
                  "uuid": "255bb236-b57a-4ca7-a9c0-f11189d27e5b",
                  "parentUUID": "4e25a0df-312f-4186-bceb-1f7e8f59e692",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve enviar email",
                  "fullTitle": "post quando eu cadastro uma tarefa e deve enviar email",
                  "timedOut": false,
                  "duration": 2266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var payload = { vhost: \"/\", name: \"tasksdev\", truncate: \"50000\", ackmode: \"ack_requeue_true\", encoding: \"auto\", count: \"1000\" };\nrabbit.post(\"/api/queues/%2f/tasksdev/get\").auth('guest', 'guest').send(payload).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body[0].payload).to.contain('Tarefa ' + task.title + ' criada com sucesso!');\n    done();\n});",
                  "err": {},
                  "uuid": "cb6134b4-04da-4524-8435-de341bedc001",
                  "parentUUID": "4e25a0df-312f-4186-bceb-1f7e8f59e692",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "255bb236-b57a-4ca7-a9c0-f11189d27e5b",
                "cb6134b4-04da-4524-8435-de341bedc001"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2327,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "2113ced1-3e65-4dca-9786-84265d28385e",
              "title": "quando nao informo o titulo",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post quando nao informo o titulo entao deve retornar 400",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.title.message).to.eql('Oops! Title is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "212e43ef-1b53-4491-a1ba-a8c715611792",
                  "parentUUID": "2113ced1-3e65-4dca-9786-84265d28385e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "212e43ef-1b53-4491-a1ba-a8c715611792"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "3ba2bb18-994f-472b-92c1-1e1e18178427",
              "title": "quando nao informo o dono",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post quando nao informo o dono entao deve retornar 400",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.owner.message).to.eql('Oops! Owner is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "031ee614-a270-43e5-9f95-b70f05193a58",
                  "parentUUID": "3ba2bb18-994f-472b-92c1-1e1e18178427",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "031ee614-a270-43e5-9f95-b70f05193a58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "7bc8a69c-cccb-4b4e-a278-11cd44e130e4",
              "title": "quando a tarefa jรก existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando a tarefa jรก existe \"before all\" hook",
                  "timedOut": false,
                  "duration": 10,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    done();\n});",
                  "err": {},
                  "uuid": "aea99ad6-b5dc-4ae6-8da4-21dd4394a391",
                  "parentUUID": "7bc8a69c-cccb-4b4e-a278-11cd44e130e4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 409",
                  "fullTitle": "post quando a tarefa jรก existe deve retornar 409",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(409);\n    expect(res.body.errmsg).to.include('duplicate key');\n    done();\n});",
                  "err": {},
                  "uuid": "ccd97af2-83ea-4a11-8026-51e674448e56",
                  "parentUUID": "7bc8a69c-cccb-4b4e-a278-11cd44e130e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccd97af2-83ea-4a11-8026-51e674448e56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "1616f629-fab0-4720-b098-6ee10f590935",
          "title": "put",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\put.spec.js",
          "file": "\\test\\put.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e1333fa8-d724-4ae8-b74c-a3ed43150d58",
              "title": "quando eu altero uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\put.spec.js",
              "file": "\\test\\put.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "put quando eu altero uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "18d214e7-5b12-4536-9f0d-dba700c830b0",
                  "parentUUID": "e1333fa8-d724-4ae8-b74c-a3ed43150d58",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "put quando eu altero uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.title = 'Comprar Baconzitos', task.done = true;\nrequest.put('/task/' + task._id).send(task).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "52bd5b28-659c-4422-87fa-8d645d113971",
                  "parentUUID": "e1333fa8-d724-4ae8-b74c-a3ed43150d58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve retornar os dados atualizados",
                  "fullTitle": "put quando eu altero uma tarefa e deve retornar os dados atualizados",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body.data.title).to.eql(task.title);\n    expect(res.body.data.done).to.be.true;\n    done();\n});",
                  "err": {},
                  "uuid": "59790dc2-91db-4730-bba6-d5bf78a6f1e4",
                  "parentUUID": "e1333fa8-d724-4ae8-b74c-a3ed43150d58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52bd5b28-659c-4422-87fa-8d645d113971",
                "59790dc2-91db-4730-bba6-d5bf78a6f1e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 9000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}