{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-14T15:49:38.194Z",
    "end": "2019-09-14T15:49:38.558Z",
    "duration": 364,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "45c096ab-a4e0-40c9-a02f-2f8cb194a43e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fb99aa36-e990-4767-8858-72b2e309586c",
          "title": "delete",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
          "file": "\\test\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4a2502d9-704e-494a-b35b-e5e21e1ae289",
              "title": "quando apago uma tarefa 2",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "delete quando apago uma tarefa 2 \"before all\" hook",
                  "timedOut": false,
                  "duration": 122,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task], function (error, docs) {\n    request.delete('/task/' + task._id).end(function (err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body).to.eql({});\n        done();\n    });\n});",
                  "err": {},
                  "uuid": "05dbcbca-6a06-4282-b0d3-37f20dfefe10",
                  "parentUUID": "4a2502d9-704e-494a-b35b-e5e21e1ae289",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "então o retorno deve ser 404",
                  "fullTitle": "delete quando apago uma tarefa 2 então o retorno deve ser 404",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    done();\n});",
                  "err": {},
                  "uuid": "b23d7214-9ccc-4f44-994f-0cae1c1a2bd2",
                  "parentUUID": "4a2502d9-704e-494a-b35b-e5e21e1ae289",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b23d7214-9ccc-4f44-994f-0cae1c1a2bd2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "2ff115eb-3959-4dea-8f16-e86f5261a635",
              "title": "quando a tarefa nao existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando a tarefa nao existe deve retornar 200",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.delete('/task/' + id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "1e7ada92-b546-4558-938e-a8ba88cb7da6",
                  "parentUUID": "2ff115eb-3959-4dea-8f16-e86f5261a635",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e7ada92-b546-4558-938e-a8ba88cb7da6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "0b0129bb-0677-4ceb-b05b-6f96aeeeea87",
          "title": "get",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
          "file": "\\test\\get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "184adf15-90de-4bd4-9853-78ac6062b2ac",
              "title": "quando eu tenho tarefas cadastradas",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "get quando eu tenho tarefas cadastradas \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Estudar NodejS', owner: 'eu@papito.io', done: false }, { title: 'Fazer compras', owner: 'eu@papito.io', done: false }, { title: 'Estudar MongoDB', owner: 'eu@papito.io', done: true }];\n            _task2.default.insertMany(tasks);\n            done();",
                  "err": {},
                  "uuid": "70a37980-9fe1-483c-8ec8-e6816bebec8c",
                  "parentUUID": "184adf15-90de-4bd4-9853-78ac6062b2ac",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma lista",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve retornar uma lista",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data).to.be.an('array');\n    done();\n});",
                  "err": {},
                  "uuid": "12d85d68-ef15-4fb2-9742-9f41581ccaae",
                  "parentUUID": "184adf15-90de-4bd4-9853-78ac6062b2ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve filtrar por palavra chave",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve filtrar por palavra chave",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').query({ title: 'Estudar' }).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data[0].title).to.equal('Estudar NodejS');\n    expect(res.body.data[1].title).to.equal('Estudar MongoDB');\n    done();\n});",
                  "err": {},
                  "uuid": "d62e47e0-ddcd-4a5b-b456-e4d892963157",
                  "parentUUID": "184adf15-90de-4bd4-9853-78ac6062b2ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12d85d68-ef15-4fb2-9742-9f41581ccaae",
                "d62e47e0-ddcd-4a5b-b456-e4d892963157"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "441290ec-58ee-4dd5-b0a6-cc3f5f815d46",
              "title": "quando busco por id",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma única tarefa",
                  "fullTitle": "get quando busco por id deve retornar uma única tarefa",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Ler um livro de Javascript', owner: 'eu@papito.io', done: false }];\n_task2.default.insertMany(tasks, function (err, result) {\n    var id = result[0]._id;\n    request.get('/task/' + id).end(function (err, res) {\n        expect(res).to.has.status(200);\n        expect(res.body.data.title).to.equal(tasks[0].title);\n        done();\n    });\n});",
                  "err": {},
                  "uuid": "ff825df5-de74-484f-bc32-369565a8ff68",
                  "parentUUID": "441290ec-58ee-4dd5-b0a6-cc3f5f815d46",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff825df5-de74-484f-bc32-369565a8ff68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "472bb256-1252-4b57-90e4-d0f591902339",
              "title": "quando a tarefa nao existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 404",
                  "fullTitle": "get quando a tarefa nao existe deve retornar 404",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.get('/task/' + id).end(function (err, res) {\n    expect(res).to.has.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "bb575c86-16a3-4f5f-8066-9e554d0fa7c3",
                  "parentUUID": "472bb256-1252-4b57-90e4-d0f591902339",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb575c86-16a3-4f5f-8066-9e554d0fa7c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "d4f9c444-5ef6-438c-afb1-092fc5d9a73f",
          "title": "post",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
          "file": "\\test\\post.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3cd7e085-2c90-44c0-ae42-79243978544f",
              "title": "quando eu cadastro uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando eu cadastro uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 6,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rabbit.delete(\"/api/queues/%2F/tasksdev/contents\").auth('guest', 'guest').end(function (err, res) {\n    expect(res).to.has.status(204);\n    done();\n});",
                  "err": {},
                  "uuid": "de0380ca-7238-4aab-803f-62fbc10466fe",
                  "parentUUID": "3cd7e085-2c90-44c0-ae42-79243978544f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "post quando eu cadastro uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data.title).to.be.an('string');\n    expect(res.body.data.owner).to.be.an('string');\n    expect(res.body.data.done).to.be.an('boolean');\n    done();\n});",
                  "err": {},
                  "uuid": "c65915e9-3e8a-4a71-a0a1-0caf033c2bc6",
                  "parentUUID": "3cd7e085-2c90-44c0-ae42-79243978544f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve enviar email",
                  "fullTitle": "post quando eu cadastro uma tarefa e deve enviar email",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var payload = { vhost: \"/\", name: \"tasksdev\", truncate: \"50000\", ackmode: \"ack_requeue_true\", encoding: \"auto\", count: \"1000\" };\nrabbit.post(\"/api/queues/%2f/tasksdev/get\").auth('guest', 'guest').send(payload).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body[0].payload).to.contain('Tarefa ' + task.title + ' criada com sucesso!');\n    done();\n});",
                  "err": {},
                  "uuid": "3e41b316-919d-45b0-9801-5828f1dbc9c2",
                  "parentUUID": "3cd7e085-2c90-44c0-ae42-79243978544f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c65915e9-3e8a-4a71-a0a1-0caf033c2bc6",
                "3e41b316-919d-45b0-9801-5828f1dbc9c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "5c6505e5-c31b-4687-9ddf-4275b6d72047",
              "title": "quando nao informo o titulo",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post quando nao informo o titulo entao deve retornar 400",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.title.message).to.eql('Oops! Title is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "9cdc06ec-903a-4f5b-aad5-56fff01ab141",
                  "parentUUID": "5c6505e5-c31b-4687-9ddf-4275b6d72047",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9cdc06ec-903a-4f5b-aad5-56fff01ab141"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "01ca9bb4-dab2-46ae-8fd0-44496d2d6c27",
              "title": "quando nao informo o dono",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post quando nao informo o dono entao deve retornar 400",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.owner.message).to.eql('Oops! Owner is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "0e2a93c0-d9ce-4a64-9246-e7cf8a9e712c",
                  "parentUUID": "01ca9bb4-dab2-46ae-8fd0-44496d2d6c27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e2a93c0-d9ce-4a64-9246-e7cf8a9e712c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            },
            {
              "uuid": "f279e7f1-cd38-4f23-99bc-165e2de55d70",
              "title": "quando a tarefa jรก existe",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando a tarefa jรก existe \"before all\" hook",
                  "timedOut": false,
                  "duration": 6,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    done();\n});",
                  "err": {},
                  "uuid": "bd45713d-8651-4d4b-9131-65ff6550e6b9",
                  "parentUUID": "f279e7f1-cd38-4f23-99bc-165e2de55d70",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 409",
                  "fullTitle": "post quando a tarefa jรก existe deve retornar 409",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(409);\n    expect(res.body.errmsg).to.include('duplicate key');\n    done();\n});",
                  "err": {},
                  "uuid": "ac64dbf3-7438-47ef-96fb-f01731781869",
                  "parentUUID": "f279e7f1-cd38-4f23-99bc-165e2de55d70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac64dbf3-7438-47ef-96fb-f01731781869"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        },
        {
          "uuid": "9d224327-90bd-4387-bda7-bba690a16a41",
          "title": "put",
          "fullFile": "c:\\fullstack\\treko\\api\\test\\put.spec.js",
          "file": "\\test\\put.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "78d16cd4-cc65-479b-a609-a9d1634b20a9",
              "title": "quando eu altero uma tarefa",
              "fullFile": "c:\\fullstack\\treko\\api\\test\\put.spec.js",
              "file": "\\test\\put.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "put quando eu altero uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany(task);\ndone();",
                  "err": {},
                  "uuid": "ef870a37-1d91-4385-9e75-f2cb06f821c1",
                  "parentUUID": "78d16cd4-cc65-479b-a609-a9d1634b20a9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "put quando eu altero uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.title = 'Comprar Baconzitos', task.done = true;\nrequest.put('/task/' + task._id).send(task).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "92594cac-fbeb-4ef0-9c6f-2a1400b4f0af",
                  "parentUUID": "78d16cd4-cc65-479b-a609-a9d1634b20a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve retornar os dados atualizados",
                  "fullTitle": "put quando eu altero uma tarefa e deve retornar os dados atualizados",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body.data.title).to.eql(task.title);\n    expect(res.body.data.done).to.be.true;\n    done();\n});",
                  "err": {},
                  "uuid": "47a7567c-ca76-4d7a-89ed-0179d348ed14",
                  "parentUUID": "78d16cd4-cc65-479b-a609-a9d1634b20a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92594cac-fbeb-4ef0-9c6f-2a1400b4f0af",
                "47a7567c-ca76-4d7a-89ed-0179d348ed14"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 9000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 9000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 9000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}